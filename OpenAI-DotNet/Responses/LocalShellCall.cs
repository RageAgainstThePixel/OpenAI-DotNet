// Licensed under the MIT License. See LICENSE in the project root for license information.

using System.Text.Json.Serialization;

namespace OpenAI.Responses
{
    public sealed class LocalShellCall : BaseResponse, IResponseItem
    {
        public LocalShellCall() { }

        public LocalShellCall(LocalShellAction action)
        {
            Type = ResponseItemType.LocalShellCall;
            Action = action;
        }

        /// <inheritdoc />
        [JsonInclude]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        [JsonPropertyName("id")]
        public string Id { get; private set; }

        /// <inheritdoc />
        [JsonInclude]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        [JsonPropertyName("type")]
        public ResponseItemType Type { get; private set; } = ResponseItemType.LocalShellCall;

        /// <inheritdoc />
        [JsonInclude]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        [JsonPropertyName("object")]
        public string Object { get; private set; }

        /// <inheritdoc />
        [JsonInclude]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        [JsonPropertyName("status")]
        public ResponseStatus Status { get; private set; }

        /// <summary>
        /// Execute a shell command on the server.
        /// </summary>
        [JsonInclude]
        [JsonPropertyName("action")]
        public LocalShellAction Action { get; }

        /// <summary>
        /// The unique ID of the local shell tool call generated by the model.
        /// </summary>
        [JsonInclude]
        [JsonPropertyName("call_id")]
        public string CallId { get; }
    }
}
